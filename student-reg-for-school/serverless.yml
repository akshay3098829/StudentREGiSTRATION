org: akshaymohan
app: studentreg
service: student-reg-for-school

frameworkVersion: '3'

# custom:
#   STUDENT_TABLE_NAME: "studentregistration"
#   STUDENT_TABLE_ARN: "arn:aws:dynamodb:ap-south-1:322923892666:table/studentregistration"

provider:
  name: aws
  runtime: python3.8
  region: ap-south-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - states:*
        - dynamodb:*
        - sqs:*
        - s3:*
      Resource: "*"  
resources:
  Resources:
    StudentThrottleQueue:
      Type: "AWS::SQS::Queue"
      Properties:
        QueueName: "student_reg_throttle"  
    StudentsTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        TableName: studentregistration
        AttributeDefinitions:
          - AttributeName: student_id
            AttributeType: S
        KeySchema:
          - AttributeName: student_id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST  # On-Demand capacity          

functions:
  apigateway_endpoint:
    handler: src/lambdas/apigateway.lambda_handler
    name : "student_reg_gateway_lambda" 
    description: "API gateway handler for Student details."
    memorySize: 1024 # optional, in MB, default is 1024
    timeout: 25 # optional, in seconds, default is 6
    events:
      - http:
          path: /students/registration/details
          method: post
    environment:
      STUDENT_TABLE_NAME: studentregistration
  student_details_from_queue_fn:
    handler: src/lambdas/studentdetailsfromqueue.lambda_handler
    name: "student_details_from_queue_fn"
    description: "Student details from the queue."
    memorySize: 2048
    timeout: 10  # 3 minutes
    events:
      - sqs:
          arn: arn:aws:sqs:ap-south-1:533267073332:student_reg_throttle
          maximumConcurrency: 2
          batchSize: 10
          maximumBatchingWindow: 10
          functionResponseType: ReportBatchItemFailures
    environment:
      STMachine_SM_ARN:
         Ref: StateMachineSF
  admission-process_fn:
     handler: src/lambdas/stepfunction_lambda_handler.lambda_handler
     name: "admission-process-lambda"
     description: "stepfunction lambda"
     memorySize: 2048
     timeout: 10  # 3 minutes
     environment:
      STUDENT_TABLE_NAME: studentregistration
stepFunctions:
  stateMachines:
    STMachineSM:
      id: StateMachineSF
      name: student-registration-state-machine
      definition: ${file(src/resources/stepfn.json)}
         

plugins:
  - serverless-step-functions
