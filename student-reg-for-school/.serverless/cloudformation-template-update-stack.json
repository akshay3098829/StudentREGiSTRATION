{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "ServerlessDeploymentBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "ServerlessDeploymentBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Effect": "Deny",
              "Principal": "*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      }
                    ]
                  ]
                }
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              }
            }
          ]
        }
      }
    },
    "ApigatewayUnderscoreendpointLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/student_reg_gateway_lambda"
      }
    },
    "StudentUnderscoredetailsUnderscorefromUnderscorequeueUnderscorefnLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/student_details_from_queue_fn"
      }
    },
    "AdmissionDashprocessUnderscorefnLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/admission-process-lambda"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "student-reg-for-school",
                  "dev",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:TagResource"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/student_reg_gateway_lambda:*"
                    },
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/student_details_from_queue_fn:*"
                    },
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/admission-process-lambda:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/student_reg_gateway_lambda:*:*"
                    },
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/student_details_from_queue_fn:*:*"
                    },
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/admission-process-lambda:*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "states:*",
                    "dynamodb:*",
                    "sqs:*",
                    "s3:*"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "sqs:ReceiveMessage",
                    "sqs:DeleteMessage",
                    "sqs:GetQueueAttributes"
                  ],
                  "Resource": [
                    "arn:aws:sqs:ap-south-1:533267073332:student_reg_throttle"
                  ]
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "student-reg-for-school",
              "dev",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "EnterpriseLogAccessIamRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "AWS": "arn:aws:iam::802587217904:root"
              },
              "Action": "sts:AssumeRole",
              "Condition": {
                "StringEquals": {
                  "sts:ExternalId": "ServerlessEnterprise-1fef85f8-6ced-4f45-8bf5-658a4136efd3"
                }
              }
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "LogFilterAccess",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:FilterLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::GetAtt": [
                        "ApigatewayUnderscoreendpointLogGroup",
                        "Arn"
                      ]
                    },
                    {
                      "Fn::GetAtt": [
                        "StudentUnderscoredetailsUnderscorefromUnderscorequeueUnderscorefnLogGroup",
                        "Arn"
                      ]
                    },
                    {
                      "Fn::GetAtt": [
                        "AdmissionDashprocessUnderscorefnLogGroup",
                        "Arn"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        ]
      }
    },
    "ApigatewayUnderscoreendpointLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/student-reg-for-school/dev/1710142593067-2024-03-11T07:36:33.067Z/student-reg-for-school.zip"
        },
        "Handler": "s_apigateway_endpoint.handler",
        "Runtime": "python3.8",
        "FunctionName": "student_reg_gateway_lambda",
        "MemorySize": 1024,
        "Timeout": 25,
        "Description": "API gateway handler for Student details.",
        "Environment": {
          "Variables": {
            "STUDENT_TABLE_NAME": "studentregistration"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "ApigatewayUnderscoreendpointLogGroup"
      ]
    },
    "StudentUnderscoredetailsUnderscorefromUnderscorequeueUnderscorefnLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/student-reg-for-school/dev/1710142593067-2024-03-11T07:36:33.067Z/student-reg-for-school.zip"
        },
        "Handler": "s_student_details_from_queue_fn.handler",
        "Runtime": "python3.8",
        "FunctionName": "student_details_from_queue_fn",
        "MemorySize": 2048,
        "Timeout": 10,
        "Description": "Student details from the queue.",
        "Environment": {
          "Variables": {
            "STMachine_SM_ARN": {
              "Ref": "StateMachineSF"
            }
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "StudentUnderscoredetailsUnderscorefromUnderscorequeueUnderscorefnLogGroup"
      ]
    },
    "AdmissionDashprocessUnderscorefnLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/student-reg-for-school/dev/1710142593067-2024-03-11T07:36:33.067Z/student-reg-for-school.zip"
        },
        "Handler": "s_admission_process_fn.handler",
        "Runtime": "python3.8",
        "FunctionName": "admission-process-lambda",
        "MemorySize": 2048,
        "Timeout": 10,
        "Description": "stepfunction lambda",
        "Environment": {
          "Variables": {
            "STUDENT_TABLE_NAME": "studentregistration"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "AdmissionDashprocessUnderscorefnLogGroup"
      ]
    },
    "ApigatewayUnderscoreendpointLambdaVersionJTXbuOrsZnTPSKNlvCxnst4loIpX1ZfSwGbbl1tVQ": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "ApigatewayUnderscoreendpointLambdaFunction"
        },
        "CodeSha256": "s8kRI6QGoWqBO6PSxYcMjzqZGfhZSNRb1lZYUMs8a1I=",
        "Description": "API gateway handler for Student details."
      }
    },
    "StudentUnderscoredetailsUnderscorefromUnderscorequeueUnderscorefnLambdaVersionsu2JXdgjqISMpMzXcSjFU5rKbFEZGI7J69y4nnF4Y": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "StudentUnderscoredetailsUnderscorefromUnderscorequeueUnderscorefnLambdaFunction"
        },
        "CodeSha256": "s8kRI6QGoWqBO6PSxYcMjzqZGfhZSNRb1lZYUMs8a1I=",
        "Description": "Student details from the queue."
      }
    },
    "AdmissionDashprocessUnderscorefnLambdaVersionKw6Y1p5DiLaa3gcnXyHLVe7udVpnbGRo4wLX2QNoxw": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "AdmissionDashprocessUnderscorefnLambdaFunction"
        },
        "CodeSha256": "s8kRI6QGoWqBO6PSxYcMjzqZGfhZSNRb1lZYUMs8a1I=",
        "Description": "stepfunction lambda"
      }
    },
    "StateMachineSFRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Sub": "states.${AWS::Region}.amazonaws.com"
                }
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "dev-student-reg-for-school-statemachine",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "lambda:InvokeFunction"
                  ],
                  "Resource": [
                    "arn:aws:lambda:ap-south-1:533267073332:function:admission-process-lambda",
                    "arn:aws:lambda:ap-south-1:533267073332:function:admission-process-lambda:*"
                  ]
                }
              ]
            }
          }
        ]
      }
    },
    "StateMachineSF": {
      "Type": "AWS::StepFunctions::StateMachine",
      "Properties": {
        "DefinitionString": "{\n  \"Comment\": \"Simple State Machine with One Lambda\",\n  \"StartAt\": \"InvokeTestLambda\",\n  \"States\": {\n    \"InvokeTestLambda\": {\n      \"Type\": \"Task\",\n      \"Resource\": \"arn:aws:states:::lambda:invoke\",\n      \"Parameters\": {\n        \"Payload.$\": \"$\",\n        \"FunctionName\": \"arn:aws:lambda:ap-south-1:533267073332:function:admission-process-lambda\"\n      },\n      \"ResultPath\": \"$.dob_result\",\n      \"End\": true\n    }\n  }\n}",
        "RoleArn": {
          "Fn::GetAtt": [
            "StateMachineSFRole",
            "Arn"
          ]
        },
        "StateMachineName": "student-registration-state-machine"
      },
      "DependsOn": [
        "StateMachineSFRole"
      ]
    },
    "ApiGatewayRestApi": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "dev-student-reg-for-school",
        "EndpointConfiguration": {
          "Types": [
            "EDGE"
          ]
        },
        "Policy": ""
      }
    },
    "ApiGatewayResourceStudents": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "students",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceStudentsRegistration": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceStudents"
        },
        "PathPart": "registration",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayResourceStudentsRegistrationDetails": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "ApiGatewayResourceStudentsRegistration"
        },
        "PathPart": "details",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodStudentsRegistrationDetailsPost": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "POST",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceStudentsRegistrationDetails"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "ApigatewayUnderscoreendpointLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      },
      "DependsOn": [
        "ApigatewayUnderscoreendpointLambdaPermissionApiGateway"
      ]
    },
    "ApiGatewayDeployment1710142584147": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "StageName": "dev"
      },
      "DependsOn": [
        "ApiGatewayMethodStudentsRegistrationDetailsPost"
      ]
    },
    "ApigatewayUnderscoreendpointLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "ApigatewayUnderscoreendpointLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "ApiGatewayLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/api-gateway/student-reg-for-school-dev"
      }
    },
    "CustomApiGatewayAccountCloudWatchRole": {
      "Type": "Custom::ApiGatewayAccountRole",
      "Version": 1,
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomDashresourceDashapigwDashcwDashroleLambdaFunction",
            "Arn"
          ]
        }
      }
    },
    "IamRoleCustomResourcesLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "dev",
                  "student-reg-for-school",
                  "custom-resources-lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      ":",
                      [
                        "arn",
                        {
                          "Ref": "AWS::Partition"
                        },
                        "iam:",
                        {
                          "Ref": "AWS::AccountId"
                        },
                        "role/*"
                      ]
                    ]
                  },
                  "Action": [
                    "iam:AttachRolePolicy",
                    "iam:CreateRole",
                    "iam:ListAttachedRolePolicies",
                    "iam:PassRole"
                  ]
                },
                {
                  "Effect": "Allow",
                  "Resource": {
                    "Fn::Join": [
                      ":",
                      [
                        "arn",
                        {
                          "Ref": "AWS::Partition"
                        },
                        "apigateway:*::/account"
                      ]
                    ]
                  },
                  "Action": [
                    "apigateway:GET",
                    "apigateway:PATCH"
                  ]
                }
              ]
            }
          }
        ]
      }
    },
    "CustomDashresourceDashapigwDashcwDashroleLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/student-reg-for-school/dev/1710142593067-2024-03-11T07:36:33.067Z/custom-resources.zip"
        },
        "FunctionName": "student-reg-for-school-dev-custom-resource-apigw-cw-role",
        "Handler": "api-gateway-cloud-watch-role/handler.handler",
        "MemorySize": 1024,
        "Runtime": "nodejs16.x",
        "Timeout": 180,
        "Role": {
          "Fn::GetAtt": [
            "IamRoleCustomResourcesLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "IamRoleCustomResourcesLambdaExecution"
      ]
    },
    "StudentUnderscoredetailsUnderscorefromUnderscorequeueUnderscorefnEventSourceMappingSQSStudentregthrottle": {
      "Type": "AWS::Lambda::EventSourceMapping",
      "DependsOn": [
        "IamRoleLambdaExecution"
      ],
      "Properties": {
        "BatchSize": 10,
        "MaximumBatchingWindowInSeconds": 10,
        "EventSourceArn": "arn:aws:sqs:ap-south-1:533267073332:student_reg_throttle",
        "FunctionName": {
          "Fn::GetAtt": [
            "StudentUnderscoredetailsUnderscorefromUnderscorequeueUnderscorefnLambdaFunction",
            "Arn"
          ]
        },
        "Enabled": true,
        "FunctionResponseTypes": [
          "ReportBatchItemFailures"
        ],
        "ScalingConfig": {
          "MaximumConcurrency": 2
        }
      }
    },
    "StudentThrottleQueue": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "QueueName": "student_reg_throttle"
      }
    },
    "StudentsTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": "studentregistration",
        "AttributeDefinitions": [
          {
            "AttributeName": "student_id",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "student_id",
            "KeyType": "HASH"
          }
        ],
        "BillingMode": "PAY_PER_REQUEST"
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      },
      "Export": {
        "Name": "sls-student-reg-for-school-dev-ServerlessDeploymentBucketName"
      }
    },
    "EnterpriseLogAccessIamRole": {
      "Value": {
        "Fn::GetAtt": [
          "EnterpriseLogAccessIamRole",
          "Arn"
        ]
      },
      "Export": {
        "Name": "sls-student-reg-for-school-dev-EnterpriseLogAccessIamRole"
      }
    },
    "ApigatewayUnderscoreendpointLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "ApigatewayUnderscoreendpointLambdaVersionJTXbuOrsZnTPSKNlvCxnst4loIpX1ZfSwGbbl1tVQ"
      },
      "Export": {
        "Name": "sls-student-reg-for-school-dev-ApigatewayUnderscoreendpointLambdaFunctionQualifiedArn"
      }
    },
    "StudentUnderscoredetailsUnderscorefromUnderscorequeueUnderscorefnLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "StudentUnderscoredetailsUnderscorefromUnderscorequeueUnderscorefnLambdaVersionsu2JXdgjqISMpMzXcSjFU5rKbFEZGI7J69y4nnF4Y"
      },
      "Export": {
        "Name": "sls-student-reg-for-school-dev-StudentUnderscoredetailsUnderscorefromUnderscorequeueUnderscorefnLambdaFunctionQualifiedArn"
      }
    },
    "AdmissionDashprocessUnderscorefnLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "AdmissionDashprocessUnderscorefnLambdaVersionKw6Y1p5DiLaa3gcnXyHLVe7udVpnbGRo4wLX2QNoxw"
      },
      "Export": {
        "Name": "sls-student-reg-for-school-dev-AdmissionDashprocessUnderscorefnLambdaFunctionQualifiedArn"
      }
    },
    "StateMachineSFArn": {
      "Description": "Current StateMachine Arn",
      "Value": {
        "Ref": "StateMachineSF"
      },
      "Export": {
        "Name": "sls-student-reg-for-school-dev-StateMachineSFArn"
      }
    },
    "ServiceEndpoint": {
      "Description": "URL of the service endpoint",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "ApiGatewayRestApi"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/dev"
          ]
        ]
      },
      "Export": {
        "Name": "sls-student-reg-for-school-dev-ServiceEndpoint"
      }
    }
  }
}